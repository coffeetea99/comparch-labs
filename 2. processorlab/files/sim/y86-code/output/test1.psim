Y86-64 Processor: pipe-std.hcl
23 bytes of code read

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa
D: instr = irmovq, rA = ----, rB = %rax, valC = 0x1, valP = 0xa, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa, imem_instr = irmovl, f_instr = irmovl
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x10
D: instr = irmovl, rA = ----, rB = %rcx, valC = 0x2, valP = 0x10, Stat = AOK
E: instr = irmovq, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x10, imem_instr = irmovw, f_instr = irmovw
	Execute: ALU: + 0x1 0x0 --> 0x1

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x14
D: instr = irmovw, rA = ----, rB = %rdx, valC = 0x3, valP = 0x14, Stat = AOK
E: instr = irmovl, valC = 0x2, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14, imem_instr = irmovb, f_instr = irmovb
	Execute: ALU: + 0x2 0x0 --> 0x2

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x17
D: instr = irmovb, rA = ----, rB = %rbx, valC = 0x4, valP = 0x17, Stat = AOK
E: instr = irmovw, valC = 0x3, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = irmovl, Cnd = 0, valE = 0x2, valA = 0x0
   dstE = %rcx, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x1, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x17, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x3 0x0 --> 0x3
	Writeback: Wrote 0x1 to register %rax

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x18
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x18, Stat = HLT
E: instr = irmovb, valC = 0x4, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rbx, dstM = ----, Stat = AOK
M: instr = irmovw, Cnd = 1, valE = 0x3, valA = 0x0
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = irmovl, valE = 0x2, valM = 0x0, dstE = %rcx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x18, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x4 0x0 --> 0x4
	Writeback: Wrote 0x2 to register %rcx

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x19
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x19, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = irmovb, Cnd = 1, valE = 0x4, valA = 0x0
   dstE = %rbx, dstM = ----, Stat = AOK
W: instr = irmovw, valE = 0x3, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x19, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %rdx

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1a
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x1a, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = irmovb, valE = 0x4, valM = 0x0, dstE = %rbx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x1a, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x4 to register %rbx

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1b
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x1b, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0x1b, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
9 instructions executed
Status = HLT
Condition Codes: Z=1 S=0 O=0
Changed Register State:
%rax:	0x0000000000000000	0x0000000000000001
%rcx:	0x0000000000000000	0x0000000000000002
%rdx:	0x0000000000000000	0x0000000000000003
%rbx:	0x0000000000000000	0x0000000000000004
Changed Memory State:
CPI: 5 cycles/5 instructions = 1.00
